// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18047
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("PrefixSearch")]
    public partial class PrefixSearchFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "PrefixSearch.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "PrefixSearch", "In order to enter my address information\r\nAs a user from an internet portal\r\nI wa" +
                    "nt to be told suggestions about possible streets\r\nwhen the text I entered matche" +
                    "s with the prefix of a street name", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Search an street that matches with the prefix of a given street name")]
        public virtual void SearchAnStreetThatMatchesWithThePrefixOfAGivenStreetName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search an street that matches with the prefix of a given street name", ((string[])(null)));
#line 7
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table1.AddRow(new string[] {
                        "S-Bahnhof Isartor",
                        "86161"});
#line 8
 testRunner.Given("in the repository is stored the street", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table2.AddRow(new string[] {
                        "isar",
                        "86161"});
#line 11
 testRunner.And("the user enters the following street", ((string)(null)), table2, "And ");
#line 14
 testRunner.When("the portal search for streets", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table3.AddRow(new string[] {
                        "S-Bahnhof Isartor",
                        "86161"});
#line 15
 testRunner.Then("the user should have the following autocomplete suggestions", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Search an street using the prefix of the name of the street when the street is co" +
            "mpound")]
        public virtual void SearchAnStreetUsingThePrefixOfTheNameOfTheStreetWhenTheStreetIsCompound()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search an street using the prefix of the name of the street when the street is co" +
                    "mpound", ((string[])(null)));
#line 19
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table4.AddRow(new string[] {
                        "S-Bahnhof Isartor",
                        "86161"});
#line 20
 testRunner.Given("in the repository is stored the street", ((string)(null)), table4, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table5.AddRow(new string[] {
                        "bahn isar",
                        "86161"});
#line 23
 testRunner.And("the user enters the following street", ((string)(null)), table5, "And ");
#line 26
 testRunner.When("the portal search for streets", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table6.AddRow(new string[] {
                        "S-Bahnhof Isartor",
                        "86161"});
#line 27
 testRunner.Then("the user should have the following autocomplete suggestions", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Search an street using the prefix of the name of the street when the street is co" +
            "mpound case Insensitive")]
        public virtual void SearchAnStreetUsingThePrefixOfTheNameOfTheStreetWhenTheStreetIsCompoundCaseInsensitive()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search an street using the prefix of the name of the street when the street is co" +
                    "mpound case Insensitive", ((string[])(null)));
#line 31
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table7.AddRow(new string[] {
                        "S-Bahnhof Isartor",
                        "86161"});
#line 32
 testRunner.Given("in the repository is stored the street", ((string)(null)), table7, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table8.AddRow(new string[] {
                        "Bahn Isar",
                        "86161"});
#line 35
 testRunner.And("the user enters the following street", ((string)(null)), table8, "And ");
#line 38
 testRunner.When("the portal search for streets", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table9.AddRow(new string[] {
                        "S-Bahnhof Isartor",
                        "86161"});
#line 39
 testRunner.Then("the user should have the following autocomplete suggestions", ((string)(null)), table9, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Search an street using the prefix of the street name when the street is compound " +
            "and searching in a different word position")]
        public virtual void SearchAnStreetUsingThePrefixOfTheStreetNameWhenTheStreetIsCompoundAndSearchingInADifferentWordPosition()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search an street using the prefix of the street name when the street is compound " +
                    "and searching in a different word position", ((string[])(null)));
#line 43
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table10.AddRow(new string[] {
                        "S-Bahnhof Isartor",
                        "86161"});
#line 44
 testRunner.Given("in the repository is stored the street", ((string)(null)), table10, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table11.AddRow(new string[] {
                        "Isar Bahn",
                        "86161"});
#line 47
 testRunner.And("the user enters the following street", ((string)(null)), table11, "And ");
#line 50
 testRunner.When("the portal search for streets", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table12.AddRow(new string[] {
                        "S-Bahnhof Isartor",
                        "86161"});
#line 51
 testRunner.Then("the user should have the following autocomplete suggestions", ((string)(null)), table12, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Search an street using the prefix of the street name when the searched street nam" +
            "e has more than one space")]
        public virtual void SearchAnStreetUsingThePrefixOfTheStreetNameWhenTheSearchedStreetNameHasMoreThanOneSpace()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search an street using the prefix of the street name when the searched street nam" +
                    "e has more than one space", ((string[])(null)));
#line 55
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table13.AddRow(new string[] {
                        "S-Bahnhof Isartor",
                        "86161"});
#line 56
 testRunner.Given("in the repository is stored the street", ((string)(null)), table13, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table14.AddRow(new string[] {
                        "Isar      Bahn",
                        "86161"});
#line 59
 testRunner.And("the user enters the following street", ((string)(null)), table14, "And ");
#line 62
 testRunner.When("the portal search for streets", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table15.AddRow(new string[] {
                        "S-Bahnhof Isartor",
                        "86161"});
#line 63
 testRunner.Then("the user should have the following autocomplete suggestions", ((string)(null)), table15, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Search an street using the prefix of the street name when the searched street nam" +
            "e has more than one space at the end")]
        public virtual void SearchAnStreetUsingThePrefixOfTheStreetNameWhenTheSearchedStreetNameHasMoreThanOneSpaceAtTheEnd()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search an street using the prefix of the street name when the searched street nam" +
                    "e has more than one space at the end", ((string[])(null)));
#line 67
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table16.AddRow(new string[] {
                        "S-Bahnhof Isartor",
                        "86161"});
#line 68
 testRunner.Given("in the repository is stored the street", ((string)(null)), table16, "Given ");
#line 71
 testRunner.And("the user enters the street \"Isar        \"  with the pobox \"86161\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
 testRunner.When("the portal search for streets", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table17.AddRow(new string[] {
                        "S-Bahnhof Isartor",
                        "86161"});
#line 73
 testRunner.Then("the user should have the following autocomplete suggestions", ((string)(null)), table17, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Search an street using the prefix of the street name when the searched street nam" +
            "e has more than one space at the beginning")]
        public virtual void SearchAnStreetUsingThePrefixOfTheStreetNameWhenTheSearchedStreetNameHasMoreThanOneSpaceAtTheBeginning()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search an street using the prefix of the street name when the searched street nam" +
                    "e has more than one space at the beginning", ((string[])(null)));
#line 77
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table18.AddRow(new string[] {
                        "S-Bahnhof Isartor",
                        "86161"});
#line 78
 testRunner.Given("in the repository is stored the street", ((string)(null)), table18, "Given ");
#line 81
 testRunner.And("the user enters the street \"    Isar\"  with the pobox \"86161\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
 testRunner.When("the portal search for streets", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table19.AddRow(new string[] {
                        "S-Bahnhof Isartor",
                        "86161"});
#line 83
 testRunner.Then("the user should have the following autocomplete suggestions", ((string)(null)), table19, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Search an street using the prefix of the street name when the searched street nam" +
            "e has a minus at the end")]
        public virtual void SearchAnStreetUsingThePrefixOfTheStreetNameWhenTheSearchedStreetNameHasAMinusAtTheEnd()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search an street using the prefix of the street name when the searched street nam" +
                    "e has a minus at the end", ((string[])(null)));
#line 87
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table20.AddRow(new string[] {
                        "S-Bahnhof Isartor",
                        "86161"});
#line 88
 testRunner.Given("in the repository is stored the street", ((string)(null)), table20, "Given ");
#line 91
 testRunner.And("the user enters the street \"Isar-\"  with the pobox \"86161\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
 testRunner.When("the portal search for streets", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table21.AddRow(new string[] {
                        "S-Bahnhof Isartor",
                        "86161"});
#line 93
 testRunner.Then("the user should have the following autocomplete suggestions", ((string)(null)), table21, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Search an street using the prefix of the street name when the searched street nam" +
            "e has a minus at the beginning")]
        public virtual void SearchAnStreetUsingThePrefixOfTheStreetNameWhenTheSearchedStreetNameHasAMinusAtTheBeginning()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search an street using the prefix of the street name when the searched street nam" +
                    "e has a minus at the beginning", ((string[])(null)));
#line 97
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table22.AddRow(new string[] {
                        "S-Bahnhof Isartor",
                        "86161"});
#line 98
 testRunner.Given("in the repository is stored the street", ((string)(null)), table22, "Given ");
#line 101
    testRunner.And("the user enters the street \"-Isar\"  with the pobox \"86161\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
 testRunner.When("the portal search for streets", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table23.AddRow(new string[] {
                        "S-Bahnhof Isartor",
                        "86161"});
#line 103
 testRunner.Then("the user should have the following autocomplete suggestions", ((string)(null)), table23, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Search an street using the prefix of the street name when the searched street nam" +
            "e has several minus")]
        public virtual void SearchAnStreetUsingThePrefixOfTheStreetNameWhenTheSearchedStreetNameHasSeveralMinus()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search an street using the prefix of the street name when the searched street nam" +
                    "e has several minus", ((string[])(null)));
#line 107
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table24.AddRow(new string[] {
                        "S-Bahnhof Isartor",
                        "86161"});
#line 108
 testRunner.Given("in the repository is stored the street", ((string)(null)), table24, "Given ");
#line 111
 testRunner.And("the user enters the street \"Bahn-----Isar\"  with the pobox \"86161\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 112
 testRunner.When("the portal search for streets", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table25.AddRow(new string[] {
                        "S-Bahnhof Isartor",
                        "86161"});
#line 113
 testRunner.Then("the user should have the following autocomplete suggestions", ((string)(null)), table25, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Search an street using the prefix of the street name when the searched street nam" +
            "e has several minus and spaces")]
        public virtual void SearchAnStreetUsingThePrefixOfTheStreetNameWhenTheSearchedStreetNameHasSeveralMinusAndSpaces()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search an street using the prefix of the street name when the searched street nam" +
                    "e has several minus and spaces", ((string[])(null)));
#line 117
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table26.AddRow(new string[] {
                        "S-Bahnhof Isartor",
                        "86161"});
#line 118
 testRunner.Given("in the repository is stored the street", ((string)(null)), table26, "Given ");
#line 121
 testRunner.And("the user enters the street \"Bahn-- -- -Isar\"  with the pobox \"86161\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 122
 testRunner.When("the portal search for streets", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table27.AddRow(new string[] {
                        "S-Bahnhof Isartor",
                        "86161"});
#line 123
 testRunner.Then("the user should have the following autocomplete suggestions", ((string)(null)), table27, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Search an street that matches with the prefix of a given street name with umlaut")]
        public virtual void SearchAnStreetThatMatchesWithThePrefixOfAGivenStreetNameWithUmlaut()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search an street that matches with the prefix of a given street name with umlaut", ((string[])(null)));
#line 127
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table28.AddRow(new string[] {
                        "Saarbrücker",
                        "86161"});
#line 128
 testRunner.Given("in the repository is stored the street", ((string)(null)), table28, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table29.AddRow(new string[] {
                        "saarbrü",
                        "86161"});
#line 131
 testRunner.And("the user enters the following street", ((string)(null)), table29, "And ");
#line 134
 testRunner.When("the portal search for streets", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table30.AddRow(new string[] {
                        "Saarbrücker",
                        "86161"});
#line 135
 testRunner.Then("the user should have the following autocomplete suggestions", ((string)(null)), table30, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Search a duplicate street that matches with the prefix of a given street name")]
        public virtual void SearchADuplicateStreetThatMatchesWithThePrefixOfAGivenStreetName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search a duplicate street that matches with the prefix of a given street name", ((string[])(null)));
#line 139
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table31.AddRow(new string[] {
                        "Saarbrücker",
                        "86161"});
            table31.AddRow(new string[] {
                        "Saarbrücker",
                        "86161"});
#line 140
 testRunner.Given("in the repository is stored the street", ((string)(null)), table31, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table32.AddRow(new string[] {
                        "saarbrü",
                        "86161"});
#line 144
 testRunner.And("the user enters the following street", ((string)(null)), table32, "And ");
#line 147
 testRunner.When("the portal search for streets", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table33.AddRow(new string[] {
                        "Saarbrücker",
                        "86161"});
#line 148
 testRunner.Then("the user should have the following autocomplete suggestions", ((string)(null)), table33, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Search for a street using the word strasse instead of street")]
        public virtual void SearchForAStreetUsingTheWordStrasseInsteadOfStreet()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search for a street using the word strasse instead of street", ((string[])(null)));
#line 153
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table34.AddRow(new string[] {
                        "Burgstr.",
                        "80331"});
#line 154
 testRunner.Given("in the repository is stored the street", ((string)(null)), table34, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table35.AddRow(new string[] {
                        "burg strasse",
                        "80331"});
#line 157
 testRunner.And("the user enters the following street", ((string)(null)), table35, "And ");
#line 160
 testRunner.When("the portal search for streets", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table36.AddRow(new string[] {
                        "Burgstr.",
                        "80331"});
#line 161
 testRunner.Then("the user should have the following autocomplete suggestions", ((string)(null)), table36, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Search for a street using the word straße instead of street")]
        public virtual void SearchForAStreetUsingTheWordStraBeInsteadOfStreet()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search for a street using the word straße instead of street", ((string[])(null)));
#line 165
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table37.AddRow(new string[] {
                        "Burgstr.",
                        "80331"});
#line 166
 testRunner.Given("in the repository is stored the street", ((string)(null)), table37, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table38.AddRow(new string[] {
                        "burg straße",
                        "80331"});
#line 169
 testRunner.And("the user enters the following street", ((string)(null)), table38, "And ");
#line 172
 testRunner.When("the portal search for streets", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "pobox"});
            table39.AddRow(new string[] {
                        "Burgstr.",
                        "80331"});
#line 173
 testRunner.Then("the user should have the following autocomplete suggestions", ((string)(null)), table39, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
